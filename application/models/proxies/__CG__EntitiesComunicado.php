<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Comunicado extends \Entities\Comunicado implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getDescricao()
    {
        $this->__load();
        return parent::getDescricao();
    }

    public function getAssunto()
    {
        $this->__load();
        return parent::getAssunto();
    }

    public function getDataCadastro()
    {
        $this->__load();
        return parent::getDataCadastro();
    }

    public function getDataSaiNovo()
    {
        $this->__load();
        return parent::getDataSaiNovo();
    }

    public function getPessoaCadastro()
    {
        $this->__load();
        return parent::getPessoaCadastro();
    }

    public function getPerfil()
    {
        $this->__load();
        return parent::getPerfil();
    }

    public function getDataExclusao()
    {
        $this->__load();
        return parent::getDataExclusao();
    }

    public function getPessoaExclusao()
    {
        $this->__load();
        return parent::getPessoaExclusao();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setDescricao($descricao)
    {
        $this->__load();
        return parent::setDescricao($descricao);
    }

    public function setAssunto($assunto)
    {
        $this->__load();
        return parent::setAssunto($assunto);
    }

    public function setDataCadastro($dataCadastro)
    {
        $this->__load();
        return parent::setDataCadastro($dataCadastro);
    }

    public function setDataSaiNovo($dataSaiNovo)
    {
        $this->__load();
        return parent::setDataSaiNovo($dataSaiNovo);
    }

    public function setPessoaCadastro(\Entities\Pessoa $pessoaCadastro)
    {
        $this->__load();
        return parent::setPessoaCadastro($pessoaCadastro);
    }

    public function setPerfil(\Entities\Perfil $perfil)
    {
        $this->__load();
        return parent::setPerfil($perfil);
    }

    public function setDataExclusao($dataExclusao)
    {
        $this->__load();
        return parent::setDataExclusao($dataExclusao);
    }

    public function setPessoaExclusao(\Entities\Pessoa $pessoaExclusao)
    {
        $this->__load();
        return parent::setPessoaExclusao($pessoaExclusao);
    }

    public function __set($property, $value)
    {
        $this->__load();
        return parent::__set($property, $value);
    }

    public function __call($method, $value)
    {
        $this->__load();
        return parent::__call($method, $value);
    }

    public function setAll(array $data)
    {
        $this->__load();
        return parent::setAll($data);
    }

    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'descricao', 'assunto', 'dataCadastro', 'dataSaiNovo', 'dataExclusao', 'pessoaCadastro', 'perfil', 'pessoaExclusao');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}